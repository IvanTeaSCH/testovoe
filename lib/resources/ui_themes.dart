import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:testovoe/resources/color_ui_themes.dart';

class UIThemes {
  final Brightness brightness;

  UIThemes({this.brightness = Brightness.light});

  static ThemeData lightTheme() => ThemeData(
    brightness: Brightness.light,
    scaffoldBackgroundColor: ColorsUIThemes.instance.light.backgroundPrimary,
    dividerTheme: DividerThemeData(
      color: ColorsUIThemes.instance.light.divider,
    ),
    progressIndicatorTheme: ProgressIndicatorThemeData(
      color: ColorsUIThemes.instance.light.textPrimary,
    ),
    appBarTheme: AppBarTheme(
      systemOverlayStyle: const SystemUiOverlayStyle(
        statusBarColor: Colors.transparent,
        statusBarIconBrightness: Brightness.dark,
        statusBarBrightness: Brightness.light,
      ),
      titleTextStyle: TextStyle(
        fontSize: 20,
        fontWeight: FontWeight.w700,
        color: ColorsUIThemes.instance.light.textPrimary,
      ),
      centerTitle: true,
      backgroundColor: ColorsUIThemes.instance.light.backgroundPrimary,
      surfaceTintColor: ColorsUIThemes.instance.light.backgroundPrimary,
      scrolledUnderElevation: 8.0,
      foregroundColor: ColorsUIThemes.instance.light.textPrimary,
    ),
  );

  static ThemeData darkTheme() => ThemeData(
    brightness: Brightness.dark,
    scaffoldBackgroundColor: ColorsUIThemes.instance.dark.backgroundPrimary,
    dividerTheme: DividerThemeData(color: ColorsUIThemes.instance.dark.divider),
    appBarTheme: AppBarTheme(
      systemOverlayStyle: const SystemUiOverlayStyle(
        statusBarColor: Colors.transparent,
        statusBarIconBrightness: Brightness.light,
        statusBarBrightness: Brightness.dark,
      ),
      titleTextStyle: TextStyle(
        fontSize: 20,
        fontWeight: FontWeight.w700,
        color: ColorsUIThemes.instance.dark.textPrimary,
      ),
      centerTitle: true,
      backgroundColor: ColorsUIThemes.instance.dark.backgroundPrimary,
      surfaceTintColor: ColorsUIThemes.instance.dark.backgroundPrimary,
      foregroundColor: ColorsUIThemes.instance.dark.textPrimary,
      scrolledUnderElevation: 8.0,
    ),
    progressIndicatorTheme: ProgressIndicatorThemeData(
      color: ColorsUIThemes.instance.dark.textPrimary,
    ),
  );

  static UIThemes of(BuildContext context) {
    return UIThemes(brightness: Theme.of(context).brightness);
  }

  static TextTheme getTextTheme(BuildContext context) {
    return Theme.of(context).textTheme;
  }

  bool get isDarkTheme => brightness == Brightness.dark;

  ///TextStyles
  ///
  ///Jura
  TextStyle get jura700x36 => const TextStyle(
    fontFamily: "Jura",
    fontSize: 36,
    fontWeight: FontWeight.w700,
  );

  // Automatically generated getters for colors
  Color get backgroundPrimary => isDarkTheme
      ? ColorsUIThemes.instance.dark.backgroundPrimary
      : ColorsUIThemes.instance.light.backgroundPrimary;

  Color get mainCard => isDarkTheme
      ? ColorsUIThemes.instance.dark.mainCard
      : ColorsUIThemes.instance.light.mainCard;

  Color get textPrimary => isDarkTheme
      ? ColorsUIThemes.instance.dark.textPrimary
      : ColorsUIThemes.instance.light.textPrimary;

  Color get textGrey => isDarkTheme
      ? ColorsUIThemes.instance.dark.textGrey
      : ColorsUIThemes.instance.light.textGrey;

  Color get divider => isDarkTheme
      ? ColorsUIThemes.instance.dark.divider
      : ColorsUIThemes.instance.light.divider;

  Color get star => isDarkTheme
      ? ColorsUIThemes.instance.dark.star
      : ColorsUIThemes.instance.light.star;
  // End of autogenerated getters
}
